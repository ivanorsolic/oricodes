<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Visualizations on Ori Codes</title>
    <link>http://localhost:1313/artificial-intelligence/visualization/</link>
    <description>Recent content in Visualizations on Ori Codes</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 01 Jan 0001 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/artificial-intelligence/visualization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Visualization: CNN Activations</title>
      <link>http://localhost:1313/artificial-intelligence/visualization/cnn-activations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/artificial-intelligence/visualization/cnn-activations/</guid>
      <description>We already saw that the custom architecture/model works, but it&amp;rsquo;s surely not the best we could come up with. The question is, how can we improve its performance and get some intuition on how it works?&#xA;Seeing what the network sees One useful visual tool we could use is Donkey&amp;rsquo;s built in cnnactivations command. Per the official docs, it shows us the feature maps for each convolutional layer in the model we pass to it.</description>
    </item>
    <item>
      <title>Visualization: Saliency Maps</title>
      <link>http://localhost:1313/artificial-intelligence/visualization/saliency-maps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/artificial-intelligence/visualization/saliency-maps/</guid>
      <description>Another useful visual tool to see how your network works is a saliency map. They were proposed back in 1998 by Itti, Koch and Niebur, a group of neuroscientists working on feature extraction in images, in a paper titled A Model of Saliency-based Visaul Attention for Rapid Scene Analysis.&#xA;In the context of Deep Learning and convolutional neural networks, they were first mentioned by the Visual Geometry Group at the University of Oxford, in a paper called Deep Inside Convolutional Networks: Visualising Image Classification Models and Saliency Maps</description>
    </item>
    <item>
      <title>Visualization: donkey makemovie</title>
      <link>http://localhost:1313/artificial-intelligence/visualization/donkey-makemovie/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/artificial-intelligence/visualization/donkey-makemovie/</guid>
      <description>The makemovie command is a great tool to visually inspect and debug your model. Here are some example uses:&#xA;To create just a video of the training data, with an overlay that shows steering: donkey makemovie --tub=pathToYour/data/ --out=outputVideo.mp4&#xA;To create a video with an overlay of your model steering and the training data steering: donkey makemovie --tub=pathToYour/data/ --out=outputVideo.mp4 --model=yourModel.h5 --type=modelType&#xA;To create a video with a saliency map and both overlays: donkey makemovie --tub=pathToYour/data/ --out=outputVideo.</description>
    </item>
  </channel>
</rss>
