<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Host PC on Ori Engineering</title>
    <link>https://ori.engineering/host-pc/</link>
    <description>Recent content in Host PC on Ori Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Dec 2019 00:00:00 +0100</lastBuildDate>
    
	<atom:link href="https://ori.engineering/host-pc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DonkeyCar installation</title>
      <link>https://ori.engineering/host-pc/donkeycar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ori.engineering/host-pc/donkeycar/</guid>
      <description>Install miniconda Python 3.7
  Install git
  Make a folder for your projects:
mkdir projectscd projects  Clone the Donkey repo:
git clone https://github.com/autorope/donkeycarcd donkeycargit checkout master  Create the Python anaconda env:
conda env create -f install\envs\windows.ymlconda activate donkeypip install -e .[pc]  Install Tensorflow GPU:
  Check the Software requirements for Nvidia GPUs
  Which basically means:</description>
    </item>
    
    <item>
      <title>Simulator installation</title>
      <link>https://ori.engineering/host-pc/simulator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ori.engineering/host-pc/simulator/</guid>
      <description>Download and unzip the simulator for your platform from the DonkeyCar GitHub release page
  Place the simulator into your projects folder (where you cloned the Donkey repo)
  Install DonkeyGym:
cd ~/projectsgit clone https://github.com/tawnkramer/gym-donkeycarconda activate donkeypip install -e gym-donkeycar  Create a new donkey application for your simulator:
donkey createcar --path ~/mysimcd ~/mysim  Edit the myconfig.py file inside the application folder you just created (mysim):</description>
    </item>
    
  </channel>
</rss>