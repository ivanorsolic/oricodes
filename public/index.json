[
{
	"uri": "http://example.org/basics/",
	"title": "Basics",
	"tags": [],
	"description": "",
	"content": " Chapter 1 Basics Discover what this Hugo theme is all about and the core-concepts behind it.\n"
},
{
	"uri": "http://example.org/",
	"title": "Basics",
	"tags": [],
	"description": "",
	"content": " Chapter X Some Chapter title Lorem Ipsum.\n"
},
{
	"uri": "http://example.org/basics/requirements/",
	"title": "Requirements",
	"tags": [],
	"description": "",
	"content": "Thanks to the simplicity of Hugo, this page is as empty as this theme needs requirements.\nJust download latest version of Hugo binary (\u0026gt; 0.25) for your OS (Windows, Linux, Mac) : it\u0026rsquo;s that simple.\n"
},
{
	"uri": "http://example.org/shortcodes/",
	"title": "Shortcodes",
	"tags": [],
	"description": "",
	"content": "Hugo uses Markdown for its simple content format. However, there are a lot of things that Markdown doesn’t support well. You could use pure HTML to expand possibilities.\nBut this happens to be a bad idea. Everyone uses Markdown because it\u0026rsquo;s pure and simple to read even non-rendered. You should avoid HTML to keep it as simple as possible.\nTo avoid this limitations, Hugo created shortcodes. A shortcode is a simple snippet inside a page.\nHugo-theme-learn provides multiple shortcodes on top of existing ones.\n Attachments  The Attachments shortcode displays a list of files attached to a page.\n Attachments (Pièces jointes)  The Attachments shortcode displays a list of files attached to a page.\n Button  Nice buttons on your page.\n Button (Bouton)  De beaux boutons sur votre page.\n Children  List the child pages of a page\n Expand  Displays an expandable/collapsible section of text on your page\n Expand  Affiche une section de texte qui se plie et se déplie\n Mermaid  Generation of diagram and flowchart from text in a similar manner as markdown\n Mermaid  Génération de diagrammes à partir de texte, dans le même style que Markdown\n Notice  Disclaimers to help you structure your page\n Notice  Message pour vous aider à structurer votre contenu\n Site param  Get value of site params variables in your page.\n Site param  Afficher la valeur d\u0026#39;un paramètre global du site dans votre page\n "
},
{
	"uri": "http://example.org/basics/installation/",
	"title": "Installation",
	"tags": [],
	"description": "",
	"content": " The following steps are here to help you initialize your new website. If you don\u0026rsquo;t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners.\nCreate your project Hugo provides a new command to create a new website.\nhugo new site \u0026lt;new_project\u0026gt;  Install the theme Install the Hugo-theme-learn theme by following this documentation\nThis theme\u0026rsquo;s repository is: https://github.com/matcornic/hugo-theme-learn.git\nAlternatively, you can download the theme as .zip file and extract it in the themes directory\nBasic configuration When building the website, you can set a theme by using --theme option. However, we suggest you modify the configuration file (config.toml) and set the theme as the default. You can also add the [outputs] section to enable the search functionality.\n# Change the default theme to be use when building the site with Hugo theme = \u0026quot;hugo-theme-learn\u0026quot; # For search functionality [outputs] home = [ \u0026quot;HTML\u0026quot;, \u0026quot;RSS\u0026quot;, \u0026quot;JSON\u0026quot;]  Create your first chapter page Chapters are pages that contain other child pages. It has a special layout style and usually just contains a chapter name, the title and a brief abstract of the section.\n### Chapter 1 # Basics Discover what this Hugo theme is all about and the core concepts behind it.  renders as\nHugo-theme-learn provides archetypes to create skeletons for your website. Begin by creating your first chapter page with the following command\nhugo new --kind chapter basics/_index.md  By opening the given file, you should see the property chapter=true on top, meaning this page is a chapter.\nBy default all chapters and pages are created as a draft. If you want to render these pages, remove the property draft: true from the metadata.\nCreate your first content pages Then, create content pages inside the previously created chapter. Here are two ways to create content in the chapter:\nhugo new basics/first-content.md hugo new basics/second-content/_index.md  Feel free to edit thoses files by adding some sample content and replacing the title value in the beginning of the files.\nLaunching the website locally Launch by using the following command:\nhugo serve  Go to http://localhost:1313\nYou should notice three things:\n You have a left-side Basics menu, containing two submenus with names equal to the title properties in the previously created files. The home page explains how to customize it by following the instructions. When you run hugo serve, when the contents of the files change, the page automatically refreshes with the changes. Neat!  Build the website When your site is ready to deploy, run the following command:\nhugo  A public folder will be generated, containing all static content and assets for your website. It can now be deployed on any web server.\nThis website can be automatically published and hosted with Netlify (Read more about Automated HUGO deployments with Netlify). Alternatively, you can use Github pages\n "
},
{
	"uri": "http://example.org/basics/configuration/",
	"title": "Configuration",
	"tags": [],
	"description": "",
	"content": " Global site parameters On top of Hugo global configuration, Hugo-theme-learn lets you define the following parameters in your config.toml (here, values are default).\nNote that some of these parameters are explained in details in other sections of this documentation.\n[params] # Prefix URL to edit current page. Will display an \u0026quot;Edit this page\u0026quot; button on top right hand corner of every page. # Useful to give opportunity to people to create merge request for your doc. # See the config.toml file from this documentation site to have an example. editURL = \u0026quot;\u0026quot; # Author of the site, will be used in meta information author = \u0026quot;\u0026quot; # Description of the site, will be used in meta information description = \u0026quot;\u0026quot; # Shows a checkmark for visited pages on the menu showVisitedLinks = false # Disable search function. It will hide search bar disableSearch = false # Javascript and CSS cache are automatically busted when new version of site is generated. # Set this to true to disable this behavior (some proxies don't handle well this optimization) disableAssetsBusting = false # Set this to true to disable copy-to-clipboard button for inline code. disableInlineCopyToClipBoard = false # A title for shortcuts in menu is set by default. Set this to true to disable it. disableShortcutsTitle = false # When using mulitlingual website, disable the switch language button. disableLanguageSwitchingButton = false # Hide breadcrumbs in the header and only show the current page title disableBreadcrumb = true # Hide Next and Previous page buttons normally displayed full height beside content disableNextPrev = true # Order sections in menu by \u0026quot;weight\u0026quot; or \u0026quot;title\u0026quot;. Default to \u0026quot;weight\u0026quot; ordersectionsby = \u0026quot;weight\u0026quot; # Change default color scheme with a variant one. Can be \u0026quot;red\u0026quot;, \u0026quot;blue\u0026quot;, \u0026quot;green\u0026quot;. themeVariant = \u0026quot;\u0026quot;  Activate search If not already present, add the follow lines in the same config.toml file.\n[outputs] home = [ \u0026quot;HTML\u0026quot;, \u0026quot;RSS\u0026quot;, \u0026quot;JSON\u0026quot;]  Learn theme uses the last improvement available in hugo version 20+ to generate a json index file ready to be consumed by lunr.js javascript search engine.\n Hugo generate lunrjs index.json at the root of public folder. When you build the site with hugo server, hugo generates it internally and of course it doesn’t show up in the filesystem\n "
},
{
	"uri": "http://example.org/basics/style-customization/",
	"title": "Style customization",
	"tags": [],
	"description": "",
	"content": " Hugo-theme-learn has been built to be as configurable as possible by defining multiple partials\nIn themes/hugo-theme-learn/layouts/partials/, you will find all the partials defined for this theme. If you need to overwrite something, don\u0026rsquo;t change the code directly. Instead follow this page. You\u0026rsquo;d create a new partial in the layouts/partials folder of your local project. This partial will have the priority.\nThis theme defines the following partials :\n header: the header of the content page (contains the breadcrumbs). Not meant to be overwritten custom-header: custom headers in page. Meant to be overwritten when adding CSS imports. Don\u0026rsquo;t forget to include style HTML tag directive in your file footer: the footer of the content page (contains the arrows). Not meant to be overwritten custom-footer: custom footer in page. Meant to be overwritten when adding Javacript. Don\u0026rsquo;t forget to include javascript HTML tag directive in your file favicon: the favicon logo: the logo, on top left hand corner. meta: HTML meta tags, if you want to change default behavior menu: left menu. Not meant to be overwritten menu-footer: footer of the the left menu search: search box toc: table of contents  Change the logo Create a new file in layouts/partials/ named logo.html. Then write any HTML you want. You could use an img HTML tag and reference an image created under the static folder, or you could paste a SVG definition !\nThe size of the logo will adapt automatically\n Change the favicon If your favicon is a png, just drop off your image in your local static/images/ folder and name it favicon.png\nIf you need to change this default behavior, create a new file in layouts/partials/ named favicon.html. Then write something like this:\n\u0026lt;link rel=\u0026quot;shortcut icon\u0026quot; href=\u0026quot;/images/favicon.png\u0026quot; type=\u0026quot;image/x-icon\u0026quot; /\u0026gt;  Change default colors Hugo Learn theme let you choose between 3 native color scheme variants, but feel free to add one yourself ! Default color scheme is based on Grav Learn Theme.\nRed variant [params] # Change default color scheme with a variant one. Can be \u0026quot;red\u0026quot;, \u0026quot;blue\u0026quot;, \u0026quot;green\u0026quot;. themeVariant = \u0026quot;red\u0026quot;  Blue variant [params] # Change default color scheme with a variant one. Can be \u0026quot;red\u0026quot;, \u0026quot;blue\u0026quot;, \u0026quot;green\u0026quot;. themeVariant = \u0026quot;blue\u0026quot;  Green variant [params] # Change default color scheme with a variant one. Can be \u0026quot;red\u0026quot;, \u0026quot;blue\u0026quot;, \u0026quot;green\u0026quot;. themeVariant = \u0026quot;green\u0026quot;  \u0026lsquo;Yours‘ variant First, create a new CSS file in your local static/css folder prefixed by theme (e.g. with mine theme static/css/theme-mine.css). Copy the following content and modify colors in CSS variables.\n:root{ --MAIN-TEXT-color:#323232; /* Color of text by default */ --MAIN-TITLES-TEXT-color: #5e5e5e; /* Color of titles h2-h3-h4-h5 */ --MAIN-LINK-color:#1C90F3; /* Color of links */ --MAIN-LINK-HOVER-color:#167ad0; /* Color of hovered links */ --MAIN-ANCHOR-color: #1C90F3; /* color of anchors on titles */ --MENU-HEADER-BG-color:#1C90F3; /* Background color of menu header */ --MENU-HEADER-BORDER-color:#33a1ff; /*Color of menu header border */ --MENU-SEARCH-BG-color:#167ad0; /* Search field background color (by default borders + icons) */ --MENU-SEARCH-BOX-color: #33a1ff; /* Override search field border color */ --MENU-SEARCH-BOX-ICONS-color: #a1d2fd; /* Override search field icons color */ --MENU-SECTIONS-ACTIVE-BG-color:#20272b; /* Background color of the active section and its childs */ --MENU-SECTIONS-BG-color:#252c31; /* Background color of other sections */ --MENU-SECTIONS-LINK-color: #ccc; /* Color of links in menu */ --MENU-SECTIONS-LINK-HOVER-color: #e6e6e6; /* Color of links in menu, when hovered */ --MENU-SECTION-ACTIVE-CATEGORY-color: #777; /* Color of active category text */ --MENU-SECTION-ACTIVE-CATEGORY-BG-color: #fff; /* Color of background for the active category (only) */ --MENU-VISITED-color: #33a1ff; /* Color of 'page visited' icons in menu */ --MENU-SECTION-HR-color: #20272b; /* Color of \u0026lt;hr\u0026gt; separator in menu */ } body { color: var(--MAIN-TEXT-color) !important; } textarea:focus, input[type=\u0026quot;email\u0026quot;]:focus, input[type=\u0026quot;number\u0026quot;]:focus, input[type=\u0026quot;password\u0026quot;]:focus, input[type=\u0026quot;search\u0026quot;]:focus, input[type=\u0026quot;tel\u0026quot;]:focus, input[type=\u0026quot;text\u0026quot;]:focus, input[type=\u0026quot;url\u0026quot;]:focus, input[type=\u0026quot;color\u0026quot;]:focus, input[type=\u0026quot;date\u0026quot;]:focus, input[type=\u0026quot;datetime\u0026quot;]:focus, input[type=\u0026quot;datetime-local\u0026quot;]:focus, input[type=\u0026quot;month\u0026quot;]:focus, input[type=\u0026quot;time\u0026quot;]:focus, input[type=\u0026quot;week\u0026quot;]:focus, select[multiple=multiple]:focus { border-color: none; box-shadow: none; } h2, h3, h4, h5 { color: var(--MAIN-TITLES-TEXT-color) !important; } a { color: var(--MAIN-LINK-color); } .anchor { color: var(--MAIN-ANCHOR-color); } a:hover { color: var(--MAIN-LINK-HOVER-color); } #sidebar ul li.visited \u0026gt; a .read-icon { color: var(--MENU-VISITED-color); } #body a.highlight:after { display: block; content: \u0026quot;\u0026quot;; height: 1px; width: 0%; -webkit-transition: width 0.5s ease; -moz-transition: width 0.5s ease; -ms-transition: width 0.5s ease; transition: width 0.5s ease; background-color: var(--MAIN-LINK-HOVER-color); } #sidebar { background-color: var(--MENU-SECTIONS-BG-color); } #sidebar #header-wrapper { background: var(--MENU-HEADER-BG-color); color: var(--MENU-SEARCH-BOX-color); border-color: var(--MENU-HEADER-BORDER-color); } #sidebar .searchbox { border-color: var(--MENU-SEARCH-BOX-color); background: var(--MENU-SEARCH-BG-color); } #sidebar ul.topics \u0026gt; li.parent, #sidebar ul.topics \u0026gt; li.active { background: var(--MENU-SECTIONS-ACTIVE-BG-color); } #sidebar .searchbox * { color: var(--MENU-SEARCH-BOX-ICONS-color); } #sidebar a { color: var(--MENU-SECTIONS-LINK-color); } #sidebar a:hover { color: var(--MENU-SECTIONS-LINK-HOVER-color); } #sidebar ul li.active \u0026gt; a { background: var(--MENU-SECTION-ACTIVE-CATEGORY-BG-color); color: var(--MENU-SECTION-ACTIVE-CATEGORY-color) !important; } #sidebar hr { border-color: var(--MENU-SECTION-HR-color); }  Then, set the themeVariant value with the name of your custom theme file. That\u0026rsquo;s it !\n[params] # Change default color scheme with a variant one. Can be \u0026quot;red\u0026quot;, \u0026quot;blue\u0026quot;, \u0026quot;green\u0026quot;. themeVariant = \u0026quot;mine\u0026quot;  "
},
{
	"uri": "http://example.org/basics/second-content/the-hardware/",
	"title": "The Hardware",
	"tags": [],
	"description": "",
	"content": " The hardware This is the first post in the series of guides on how to make a RC car.\nIt will explain what hardware parts and tools are needed, how to put them all together and how to setup the base software needed for it to run.\nThe end result should be something that looks like this, and runs a custom Linux kernel:\n Parts list You\u0026rsquo;ll want to have:\n A RC car (with some batteries) A PWM/Servo Driver (I2C + some jumper cables) A Jetson Nano A powerbank (+ some usb cables) A microSD card (and optionally an external SSD) A WiFi/BT m.2 card (key E) or some USB equivalent Some tools and materials for building the chassis (and optionally access to a 3D printer) An Xbox/PS/PC gamepad  Let\u0026rsquo;s go through each of the parts.\nRC Car You can basically get any RC car, as long as it has an ESC controller, or you can hook up one to it. But not to get ahead of ourselves, let\u0026rsquo;s first look at some of the things that are important to consider in a RC car if you want to make it drive itself:\n Scale Body type Electric motor Servo ESC Receiver Batteries  The scale Most RC cars are scaled down versions of their real-life equivalent, so they\u0026rsquo;re expressed in ratios, the most common ones being (real-life size : RC model size):\n 1:18 1:16 1:10 1:8 there are also all sorts of scales in between those (and above/below)  Of course, the question is: why do we care, and what\u0026rsquo;s better for a self-driving RC car?\nIt\u0026rsquo;s pretty simple, a bigger RC car equals more real estate and more power to carry all of our gadgets on top of it, without damaging the motors while struggling with all of the weight. The down side of a bigger car is the need for a bigger race track and road size we want to drive it on.\nThe body type The best body type for on road self-driving purposes would be the standard race body type. But to be thorough, we could roughly group all of the RC cars in 4 distinct categories:\nRACE/STREET Probably the first thing that comes to mind when thinking of an RC car, a standard race car. This body type is the fastest and the best on paved, flat surfaces and is meant for on road use only.\nThere is also a specialized group of RC cars of this body type that are meant for drifting on racing tracks. The main difference are the tires, which are much slicker than regular ones.\nBUGGY Buggies are the golden middle between an off-road and on road RC car. They are the second best thing on the road but the slowest off-road. That being said, they can go off-road, unlike a regular racing car, so that makes them the best bet for people that aren\u0026rsquo;t sure if they want to go off-road or on road.\nTRUGGY Truggies are also an in-between body type, but they lean more to the off-road role, as opposed to the buggies. Consider them a buggy with monster truck tires. They\u0026rsquo;re the second fastest body type off-road, and the third fastest on road.\nTRUCKS Truck are your regular monster trucks, the best for going off-road but the slowest for going on road. For a self-driving application, they\u0026rsquo;d be pretty bad, since they tend to flip over while making on road turns, so it\u0026rsquo;s best to stick with them only if you\u0026rsquo;re planning to go off road in the woods, grass or dirt.\nElectric motors The main question concerning electric motors is: brushed or brushless?\nBrushed pros: cheaper, simpler, better for off-road. Brushed cons: heavier, bigger, worse power efficiency (75-80%), they wear out in time.\nBrushless pros: long lifespan, much better speed and handling, better power efficiency (85-90%). Brushless cons: much more expensive, worse for off-road.\nSo what should we get? It depends on your budget, but brushed motors work just fine, and besides, for self-driving purposes, you don’t need a RC car that drives 100 KPH. It’s also always possible to swap out a brushed motor for a brushless later on.\nServo An RC servo is used for controlling the steering wheels of the car. It almost always comes with the RC car, so you shouldn’t worry about getting one.\nIt typically expects around 4.8V to 6V input on the power wire (varies by car) and a PWM control signal on the signal wire. Typically, the three wires are colored black-red-white, or brown-red-yellow, where:\n the dark wire (black/brown) is ground, and the center wire (red) is power, and the light wire (white/yellow) is control.  The control signal is RC-style PWM, where one pulse is sent 60 times a second, and the width of this pulse controls how left/right the servo turns. When this pulse is:\n 1500 microseconds, the servo is centered; 1000 microseconds, the servo is turned all the way left (or right) 2000 microseconds, the servo is turned all the way in the other direction.  This is NOT the same kind of PWM that you would use to control the duty cycle of a motor, or the brightness of a LED.\nThe power for the servo typically comes from the motor ESC, which has a BEC (Battery Eliminator Circuit) built in.\nSource: DonkeyCar docs.\nElectronic Speed Controller (ESC) The role of the ESC is to take a RC PWM control signal (pulse between 1000 and 2000 microseconds) in, and use that to control the power to the motor so the motor spins with different amounts of power in forward or reverse. Many RC car kits come with an ESC preinstalled, in which case you should be just fine.\nAgain, 1500 microseconds typically means \u0026ldquo;center\u0026rdquo; which for the motor means \u0026ldquo;dead stop.\u0026rdquo;\nThe battery typically connects straight to the ESC using thicker wiring than the simple control signals, because the motor draws many more amps than the control. The ESC then connects on to the motor with equally thick power wiring.\nStandard motors and ESCs have a peak current of about 12A; a 1/8th scale RC car with powerful brushless motor can have a peak draw up to 200A.\nAdditionally, the ESC typically contains a linear or switching voltage converter that outputs the power needed to control the steering servo; this is typically somewhere in the 4.8V to 6V range. Most BECs built into ESCs will not deliver more than about 1A of current, so it is not typically possible to power both the steering servo and the Jetson Nano from the BEC.\nThe main thing to look out for when getting an ESC on your own is to be sure to match your motor type to your ESC type (brushed/brushless).\nSource: DonkeyCar docs.\nReceiver If you buy a \u0026ldquo;kit car\u0026rdquo; that is listed as \u0026ldquo;needs a receiver,\u0026rdquo; then you don\u0026rsquo;t need to buy a receiver.\nThe Jetson Nano and the PWM/Servo driver will replace the receiver, outputting control signals to the car. If you’re buying a kit with a steering servo, motor, and ESC, you should actually try to not get a receiver, since the RC car could be specifically designed for that receivers PWM signals, and you’ll be taking it apart anyways.\nBatteries There are two types of batteries used for RC cars: Nickel Metal Hydride batteries (NiMH) and Lithium Polymer batteries (LiPo).\nTL;DR: LiPo batteries are much better, but also more expensive.\nLithium Polymer batteries generally have higher current capacity (the amount of Amps the battery can deliver at one point while driving) as well as energy storage (the number of Amp Hours the battery stores when fully charged) so it may also last longer.\nThe amount of charge a battery can hold (how long it runs) is measured in Ampere-hours. The amount of current a battery can instantaneously deliver while driving is measured simply in Amperes.\nAmperes are often re-calculated in terms of multiples of the energy content, divided by one hour which is often called \u0026ldquo;C.\u0026rdquo; Thus, a LiPo rated for 10C and 2000 mAh, can deliver 20 Amperes of current while driving. A NiHM rated for 5C and 1100 mAh can deliver 5.5 Amperes of current while driving.\nBatteries can deliver more than the C rating for very short amounts of time, but will heat up or build up internal resistance so you shouldn’t count on that as being their standard capability.\nFor your custom car, be aware of the voltages needed for the ESC and the motor of the car, and make sure to get a battery that matches them in voltage.\nSmaller RC cars will come with NiMH for affordability, or 2S LiPo for power. Larger RC cars will use 3S (11.1V) or 4S (14.8V) or even 6S (22.2V) Lithium batteries, and thus need to have ESC and motor combinations to match.\nBe sure to get a charger that matches your battery.\nIf you have a LiPo battery:\n get a good Lithium battery charger, with a balancing plug, never discharge a Lithium battery below 3.2V per cell  If you discharge a LiPo battery completely, it won’t ever be charged up to its normal voltage again, and trying to do so will overheat the battery and set it on fire.\nTo prevent this, get a battery alarm and a LiPo charging bag:\nTamiya TT-01/TT-02 "
},
{
	"uri": "http://example.org/shortcodes/attachments/",
	"title": "Attachments",
	"tags": [],
	"description": "The Attachments shortcode displays a list of files attached to a page.",
	"content": " The Attachments shortcode displays a list of files attached to a page.\n  Attachments   BachGavotteShort.mp3  (357 ko)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 ko)   adivorciarsetoca00cape.pdf  (361 ko)   hugo.png  (17 ko)   movieselectricsheep-flock-244-32500-2.mp4  (340 ko)    Usage The shortcurt lists files found in a specific folder. Currently, it support two implementations for pages\n If your page is a markdown file, attachements must be place in a folder named like your page and ending with .files.\n  content  _index.md page.files  attachment.pdf  page.md    If your page is a folder, attachements must be place in a nested \u0026lsquo;files\u0026rsquo; folder.\n  content  _index.md page  index.md files  attachment.pdf       Be aware that if you use a multilingual website, you will need to have as many folders as languages.\nThat\u0026rsquo;s all !\nParameters    Parameter Default Description     title \u0026ldquo;Attachments\u0026rdquo; List\u0026rsquo;s title   style \u0026rdquo;\u0026rdquo; Choose between \u0026ldquo;orange\u0026rdquo;, \u0026ldquo;grey\u0026rdquo;, \u0026ldquo;blue\u0026rdquo; and \u0026ldquo;green\u0026rdquo; for nice style   pattern \u0026rdquo;.*\u0026rdquo; A regular expressions, used to filter the attachments by file name. The pattern parameter value must be regular expressions.    For example:\n To match a file suffix of \u0026lsquo;jpg\u0026rsquo;, use .*jpg (not *.jpg). To match file names ending in \u0026lsquo;jpg\u0026rsquo; or \u0026lsquo;png\u0026rsquo;, use .*(jpg|png)  Examples List of attachments ending in pdf or mp4 {{%attachments title=\u0026quot;Related files\u0026quot; pattern=\u0026quot;.*(pdf|mp4)\u0026quot;/%}}  renders as\n  Related files   Carroll_AliceAuPaysDesMerveilles.pdf  (175 ko)   adivorciarsetoca00cape.pdf  (361 ko)   movieselectricsheep-flock-244-32500-2.mp4  (340 ko)    Colored styled box {{%attachments style=\u0026quot;orange\u0026quot; /%}}  renders as\n  Attachments   BachGavotteShort.mp3  (357 ko)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 ko)   adivorciarsetoca00cape.pdf  (361 ko)   hugo.png  (17 ko)   movieselectricsheep-flock-244-32500-2.mp4  (340 ko)    {{%attachments style=\u0026quot;grey\u0026quot; /%}}  renders as\n  Attachments   BachGavotteShort.mp3  (357 ko)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 ko)   adivorciarsetoca00cape.pdf  (361 ko)   hugo.png  (17 ko)   movieselectricsheep-flock-244-32500-2.mp4  (340 ko)    {{%attachments style=\u0026quot;blue\u0026quot; /%}}  renders as\n  Attachments   BachGavotteShort.mp3  (357 ko)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 ko)   adivorciarsetoca00cape.pdf  (361 ko)   hugo.png  (17 ko)   movieselectricsheep-flock-244-32500-2.mp4  (340 ko)    {{%attachments style=\u0026quot;green\u0026quot; /%}}  renders as\n  Attachments   BachGavotteShort.mp3  (357 ko)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 ko)   adivorciarsetoca00cape.pdf  (361 ko)   hugo.png  (17 ko)   movieselectricsheep-flock-244-32500-2.mp4  (340 ko)    "
},
{
	"uri": "http://example.org/shortcodes/attachments.fr/",
	"title": "Attachments (Pièces jointes)",
	"tags": [],
	"description": "The Attachments shortcode displays a list of files attached to a page.",
	"content": " Le shortcode Attachments affiche une liste de pièces jointes d\u0026rsquo;une page.\n  Attachments   BachGavotteShort.mp3  (357 ko)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 ko)   adivorciarsetoca00cape.pdf  (361 ko)   hugo.png  (17 ko)   movieselectricsheep-flock-244-32500-2.mp4  (340 ko)    Utilisation Le shortcode affiche la liste de fichiers trouvés dans un dossier spécifique A l\u0026rsquo;heure actuelle, il supporte deux implémentations\n Si votre page est un fichier Markdown, les pièces jointes doivent être placée dans un dossier nommé comme le nom de la page et suffixé par .files.\n  content  _index.md page.files  attachment.pdf  page.md    Si votre page est un dossier, les pièces jointes doivent être placées dans un dossier fils \u0026lsquo;files\u0026rsquo;.\n  content  _index.md page  index.md files  attachment.pdf       Attention, si votre site est multi-langue, vous devrez avec autant de dossier qu\u0026rsquo;il y a de langues.\nC\u0026rsquo;est tout !\nParamètres    Paramètre Défaut Description     title \u0026ldquo;Pièces jointes\u0026rdquo; Titre de la liste   style \u0026rdquo;\u0026rdquo; Choisir entre \u0026ldquo;orange\u0026rdquo;, \u0026ldquo;grey\u0026rdquo;, \u0026ldquo;blue\u0026rdquo; et \u0026ldquo;green\u0026rdquo; pour un style plus sympa   pattern \u0026rdquo;.*\u0026rdquo; Une expression régulière, utilisée pour filtrer les pièces jointes par leur nom de fichier. Le paramètre pattern doit être une expression régulière.    Par exemple:\n Pour trouver les fichiers avec le suffixe \u0026lsquo;jpg\u0026rsquo;, utilisez .*jpg (pas *.jpg). Pour trouver les fichiers avec les suffixe \u0026lsquo;jpg\u0026rsquo; ou \u0026lsquo;png\u0026rsquo;, utilisez .*(jpg|png)  Exemples Lister les pièces jointes de type pdf ou mp4 {{%attachments title=\u0026quot;Fichiers associés\u0026quot; pattern=\u0026quot;.*(pdf|mp4)\u0026quot;/%}}  s\u0026rsquo;affiche comme\n  Fichiers associés   Carroll_AliceAuPaysDesMerveilles.pdf  (175 ko)   adivorciarsetoca00cape.pdf  (361 ko)   movieselectricsheep-flock-244-32500-2.mp4  (340 ko)    Modifier le style {{%attachments style=\u0026quot;orange\u0026quot; /%}}  s\u0026rsquo;affiche comme\n  Attachments   BachGavotteShort.mp3  (357 ko)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 ko)   adivorciarsetoca00cape.pdf  (361 ko)   hugo.png  (17 ko)   movieselectricsheep-flock-244-32500-2.mp4  (340 ko)    {{%attachments style=\u0026quot;grey\u0026quot; /%}}  s\u0026rsquo;affiche comme\n  Attachments   BachGavotteShort.mp3  (357 ko)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 ko)   adivorciarsetoca00cape.pdf  (361 ko)   hugo.png  (17 ko)   movieselectricsheep-flock-244-32500-2.mp4  (340 ko)    {{%attachments style=\u0026quot;blue\u0026quot; /%}}  s\u0026rsquo;affiche comme\n  Attachments   BachGavotteShort.mp3  (357 ko)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 ko)   adivorciarsetoca00cape.pdf  (361 ko)   hugo.png  (17 ko)   movieselectricsheep-flock-244-32500-2.mp4  (340 ko)    {{%attachments style=\u0026quot;green\u0026quot; /%}}  s\u0026rsquo;affiche comme\n  Attachments   BachGavotteShort.mp3  (357 ko)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 ko)   adivorciarsetoca00cape.pdf  (361 ko)   hugo.png  (17 ko)   movieselectricsheep-flock-244-32500-2.mp4  (340 ko)    "
},
{
	"uri": "http://example.org/shortcodes/button/",
	"title": "Button",
	"tags": [],
	"description": "Nice buttons on your page.",
	"content": "A button is a just a clickable button with optional icon.\n{{% button href=\u0026quot;https://getgrav.org/\u0026quot; %}}Get Grav{{% /button %}} {{% button href=\u0026quot;https://getgrav.org/\u0026quot; icon=\u0026quot;fas fa-download\u0026quot; %}}Get Grav with icon{{% /button %}} {{% button href=\u0026quot;https://getgrav.org/\u0026quot; icon=\u0026quot;fas fa-download\u0026quot; icon-position=\u0026quot;right\u0026quot; %}}Get Grav with icon right{{% /button %}}   Get Grav   Get Grav with icon  Get Grav with icon right   "
},
{
	"uri": "http://example.org/shortcodes/button.fr/",
	"title": "Button (Bouton)",
	"tags": [],
	"description": "De beaux boutons sur votre page.",
	"content": "Le shortcode button est simplement un bouton cliquable avec une icône optionnelle.\n{{% button href=\u0026quot;https://getgrav.org/\u0026quot; %}}Téléchargez Grav{{% /button %}} {{% button href=\u0026quot;https://getgrav.org/\u0026quot; icon=\u0026quot;fas fa-download\u0026quot; %}}Téléchargez Grav avec icône{{% /button %}} {{% button href=\u0026quot;https://getgrav.org/\u0026quot; icon=\u0026quot;fas fa-download\u0026quot; icon-position=\u0026quot;right\u0026quot; %}}Téléchargez Grav avec icône à droite{{% /button %}}   Téléchargez Grav   Téléchargez Grav avec icône  Téléchargez Grav avec icône à droite   "
},
{
	"uri": "http://example.org/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/shortcodes/children/",
	"title": "Children",
	"tags": [],
	"description": "List the child pages of a page",
	"content": " Use the children shortcode to list the child pages of a page and the further descendants (children\u0026rsquo;s children). By default, the shortcode displays links to the child pages.\nUsage    Parameter Default Description     page current Specify the page name (section name) to display children for   style \u0026ldquo;li\u0026rdquo; Choose the style used to display descendants. It could be any HTML tag name   showhidden \u0026ldquo;false\u0026rdquo; When true, child pages hidden from the menu will be displayed   description \u0026ldquo;false\u0026rdquo; Allows you to include a short text under each page in the list.when no description exists for the page, children shortcode takes the first 70 words of your content. read more info about summaries on gohugo.io   depth 1 Enter a number to specify the depth of descendants to display. For example, if the value is 2, the shortcode will display 2 levels of child pages.  Tips: set 999 to get all descendants   sort none Sort Children By\nWeight - to sort on menu orderName - to sort alphabetically on menu labelIdentifier - to sort alphabetically on identifier set in frontmatterURL - URL    Demo {{% children %}}   page 1   page 2   page 3   page test   page test   {{% children description=\u0026quot;true\u0026quot; %}}   page 1  This is a demo child page\n page 2  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n page 3  This is a demo child page\n page test  This is a page test\n page test  Ceci est une page test\n {{% children depth=\u0026quot;3\u0026quot; showhidden=\u0026quot;true\u0026quot; %}}   page 1    page 1-1    page 1-1-1   \n page 2 \n  page test 3     page test 3 \n  \n page 3 \n   page 4 \n   page test \n   page test \n  \n{{% children style=\u0026quot;h2\u0026quot; depth=\u0026quot;3\u0026quot; description=\u0026quot;true\u0026quot; %}}   page 1  This is a demo child page\n page 1-1  This is a demo child page\n page 1-1-1  This is a demo child page\n page 2  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n page test 3  This is a page test\n page test 3  Ceci est une page test\n page 3  This is a demo child page\n page test  This is a page test\n page test  Ceci est une page test\n {{% children style=\u0026quot;div\u0026quot; depth=\u0026quot;999\u0026quot; %}}   page 1   page 1-1   page 1-1-1   page 1-1-1-1   page 1-1-1-1-1   page 2   page test 3   page test 3   page 3   page test   page test   "
},
{
	"uri": "http://example.org/shortcodes/expand/",
	"title": "Expand",
	"tags": [],
	"description": "Displays an expandable/collapsible section of text on your page",
	"content": " The Expand shortcode displays an expandable/collapsible section of text on your page. Here is an example\n  Expand me...   Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  Usage this shortcode takes exactly one optional parameter to define the text that appears next to the expand/collapse icon. (default is \u0026ldquo;Expand me\u0026hellip;\u0026rdquo;)\n{{%expand \u0026quot;Is this learn theme rocks ?\u0026quot; %}}Yes !.{{% /expand%}}    Is this learn theme rocks ?   Yes !   Demo {{%expand%}} Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. {{% /expand%}}    Expand me...   Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  "
},
{
	"uri": "http://example.org/shortcodes/expand.fr/",
	"title": "Expand",
	"tags": [],
	"description": "Affiche une section de texte qui se plie et se déplie",
	"content": " Le shortcode Expand affiche une section de texte qui se plie et se déplie. Ci-dessous un exemple.\n  Expand me...   Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  Utilisation Ce shortcode prends exactement un paramètre optionel pour définir le texte à côté de l\u0026rsquo;icone. (valeur par défaut est \u0026ldquo;Déroulez-moi\u0026hellip;\u0026rdquo;)\n{{%expand \u0026quot;Est-ce que ce thème envoie du pâté ?\u0026quot; %}}Oui !.{{% /expand%}}    Est-ce que ce thème envoie du pâté ?   Oui !   Demo {{%expand%}} Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. {{% /expand%}}    Expand me...   Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n  "
},
{
	"uri": "http://example.org/shortcodes/mermaid/",
	"title": "Mermaid",
	"tags": [],
	"description": "Generation of diagram and flowchart from text in a similar manner as markdown",
	"content": " Mermaid is a library helping you to generate diagram and flowcharts from text, in a similar manner as Markdown.\nJust insert your mermaid code in the mermaid shortcode and that\u0026rsquo;s it.\nFlowchart example {{\u0026lt;mermaid align=\u0026quot;left\u0026quot;\u0026gt;}} graph LR; A[Hard edge] --\u0026gt;|Link text| B(Round edge) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result one] C --\u0026gt;|Two| E[Result two] {{\u0026lt; /mermaid \u0026gt;}}  renders as\ngraph LR; A[Hard edge] --|Link text| B(Round edge) B -- C{Decision} C --|One| D[Result one] C --|Two| E[Result two]  or you can use this alternative syntax:\n ```mermaid graph LR; A[Hard edge] --|Link text| B(Round edge) B -- C{Decision} C --|One| D[Result one] C --|Two| E[Result two] ```  renders as\ngraph LR; A[Hard edge] --\u0026gt;|Link text| B(Round edge) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result one] C --\u0026gt;|Two| E[Result two]  Sequence example {{\u0026lt;mermaid\u0026gt;}} sequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good! {{\u0026lt; /mermaid \u0026gt;}}  renders as\nsequenceDiagram participant Alice participant Bob Alice-John: Hello John, how are you? loop Healthcheck John-John: Fight against hypochondria end Note right of John: Rational thoughts prevail... John--Alice: Great! John-Bob: How about you? Bob--John: Jolly good!  or you can use this alternative syntax:\n ```mermaid sequenceDiagram participant Alice participant Bob Alice-John: Hello John, how are you? loop Healthcheck John-John: Fight against hypochondria end Note right of John: Rational thoughts prevail... John--Alice: Great! John-Bob: How about you? Bob--John: Jolly good! ```  renders as\nsequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good!  GANTT Example {{\u0026lt;mermaid\u0026gt;}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d {{\u0026lt; /mermaid \u0026gt;}}  renders as\ngantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d  or you can use this alternative syntax:\n ```mermaid gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d ```  renders as\ngantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d  Class example  ```mermaid classDiagram Class01 C2 : Where am i? Class09 --* C3 Class09 --| Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08  C2: Cool label ```  renders as\nclassDiagram Class01 \u0026lt;|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u0026lt;--\u0026gt; C2: Cool label  Git example  ```mermaid gitGraph: options { \"nodeSpacing\": 150, \"nodeRadius\": 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch ```  renders as\ngitGraph: options { \u0026quot;nodeSpacing\u0026quot;: 150, \u0026quot;nodeRadius\u0026quot;: 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch  "
},
{
	"uri": "http://example.org/shortcodes/mermaid.fr/",
	"title": "Mermaid",
	"tags": [],
	"description": "Génération de diagrammes à partir de texte, dans le même style que Markdown",
	"content": " Mermaid est une bibliothèque Javascript qui permet de générer des diagrammes (séquence, état, gantt, etc.) à partir de texte, dans le même style que Markdown.\nInsérer votre code Mermaid dans un shortcode mermaid et c\u0026rsquo;est tout.\nFlowchart example {{\u0026lt;mermaid align=\u0026quot;left\u0026quot;\u0026gt;}} graph LR; A[Bords droits] --\u0026gt;|Lien texte| B(Bords arondis) B --\u0026gt; C{Décision} C --\u0026gt;|Un| D[Résultat un] C --\u0026gt;|Deux| E[Résultat deux] {{\u0026lt; /mermaid \u0026gt;}}  renders as\ngraph LR; A[Bords droits] --|Lien texte| B(Bords arondis) B -- C{Décision} C --|Un| D[Résultat un] C --|Deux| E[Résultat deux]  or you can use this alternative syntax:\n ```mermaid graph LR; A[Bords droits] --|Lien texte| B(Bords arondis) B -- C{Décision} C --|Un| D[Résultat un] C --|Deux| E[Résultat deux] ```  renders as\ngraph LR; A[Bords droits] --\u0026gt;|Lien texte| B(Bords arondis) B --\u0026gt; C{Décision} C --\u0026gt;|Un| D[Résultat un] C --\u0026gt;|Deux| E[Résultat deux]  Sequence example {{\u0026lt;mermaid\u0026gt;}} sequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Salut John, comment vas-tu? loop Vérification John-\u0026gt;John: Se bat contre l'hyponcodrie. end Note right of John: Les pensées rationnelles\u0026lt;br/\u0026gt;prédominent... John--\u0026gt;Alice: Super! John-\u0026gt;Bob: Et toi? Bob--\u0026gt;John: Au top! {{\u0026lt; /mermaid \u0026gt;}}  renders as\nsequenceDiagram participant Alice participant Bob Alice-John: Salut John, comment vas-tu? loop Vérification John-John: Se bat contre l'hyponcodrie. end Note right of John: Les pensées rationnellesprédominent... John--Alice: Super! John-Bob: Et toi? Bob--John: Au top!  or you can use this alternative syntax:\n ```mermaid sequenceDiagram participant Alice participant Bob Alice-John: Salut John, comment vas-tu? loop Vérification John-John: Se bat contre l'hyponcodrie. end Note right of John: Les pensées rationnellesprédominent... John--Alice: Super! John-Bob: Et toi? Bob--John: Au top! ```  renders as\nsequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Salut John, comment vas-tu? loop Vérification John-\u0026gt;John: Se bat contre l'hyponcodrie. end Note right of John: Les pensées rationnelles\u0026lt;br/\u0026gt;prédominent... John--\u0026gt;Alice: Super! John-\u0026gt;Bob: Et toi? Bob--\u0026gt;John: Au top!  GANTT Example {{\u0026lt;mermaid\u0026gt;}} gantt dateFormat YYYY-MM-DD title Ajout de la fonctionnalité de GANTT à Mermaid section Une section Tâche complétée :done, des1, 2014-01-06,2014-01-08 Tâche en cours :active, des2, 2014-01-09, 3d Future tâche : des3, after des2, 5d Future tâche 2 : des4, after des3, 5d section Tâches critiques Tâche complétée dans le chemin critique :crit, done, 2014-01-06,24h Implémenter le parser et jison :crit, done, after des1, 2d Créer des tests pour le parser :crit, active, 3d Future tâche dans le chemin critique :crit, 5d Créer des tests pour le renderer :2d Ajout à Mermaid :1d {{\u0026lt; /mermaid \u0026gt;}}  renders as\ngantt dateFormat YYYY-MM-DD title Ajout de la fonctionnalité de GANTT à Mermaid section Une section Tâche complétée :done, des1, 2014-01-06,2014-01-08 Tâche en cours :active, des2, 2014-01-09, 3d Future tâche : des3, after des2, 5d Future tâche 2 : des4, after des3, 5d section Tâches critiques Tâche complétée dans le chemin critique :crit, done, 2014-01-06,24h Implémenter le parser et jison :crit, done, after des1, 2d Créer des tests pour le parser :crit, active, 3d Future tâche dans le chemin critique :crit, 5d Créer des tests pour le renderer :2d Ajout à Mermaid :1d  or you can use this alternative syntax:\n ```mermaid gantt dateFormat YYYY-MM-DD title Ajout de la fonctionnalité de GANTT à Mermaid section Une section Tâche complétée :done, des1, 2014-01-06,2014-01-08 Tâche en cours :active, des2, 2014-01-09, 3d Future tâche : des3, after des2, 5d Future tâche 2 : des4, after des3, 5d section Tâches critiques Tâche complétée dans le chemin critique :crit, done, 2014-01-06,24h Implémenter le parser et jison :crit, done, after des1, 2d Créer des tests pour le parser :crit, active, 3d Future tâche dans le chemin critique :crit, 5d Créer des tests pour le renderer :2d Ajout à Mermaid :1d ```  renders as\ngantt dateFormat YYYY-MM-DD title Ajout de la fonctionnalité de GANTT à Mermaid section Une section Tâche complétée :done, des1, 2014-01-06,2014-01-08 Tâche en cours :active, des2, 2014-01-09, 3d Future tâche : des3, after des2, 5d Future tâche 2 : des4, after des3, 5d section Tâches critiques Tâche complétée dans le chemin critique :crit, done, 2014-01-06,24h Implémenter le parser et jison :crit, done, after des1, 2d Créer des tests pour le parser :crit, active, 3d Future tâche dans le chemin critique :crit, 5d Créer des tests pour le renderer :2d Ajout à Mermaid :1d  Class example  ```mermaid classDiagram Class01 C2 : Where am i? Class09 --* C3 Class09 --| Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08  C2: Cool label ```  renders as\nclassDiagram Class01 \u0026lt;|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u0026lt;--\u0026gt; C2: Cool label  Git example  ```mermaid gitGraph: options { \"nodeSpacing\": 150, \"nodeRadius\": 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch ```  renders as\ngitGraph: options { \u0026quot;nodeSpacing\u0026quot;: 150, \u0026quot;nodeRadius\u0026quot;: 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch  "
},
{
	"uri": "http://example.org/shortcodes/notice/",
	"title": "Notice",
	"tags": [],
	"description": "Disclaimers to help you structure your page",
	"content": " The notice shortcode shows 4 types of disclaimers to help you structure your page.\nNote {{% notice note %}} A notice disclaimer {{% /notice %}}  renders as\nA notice disclaimer\n Info {{% notice info %}} An information disclaimer {{% /notice %}}  renders as\nAn information disclaimer\n Tip {{% notice tip %}} A tip disclaimer {{% /notice %}}  renders as\nA tip disclaimer\n Warning {{% notice warning %}} An warning disclaimer {{% /notice %}}  renders as\nA warning disclaimer\n "
},
{
	"uri": "http://example.org/shortcodes/notice.fr/",
	"title": "Notice",
	"tags": [],
	"description": "Message pour vous aider à structurer votre contenu",
	"content": " Le shortcode Notice permet d\u0026rsquo;afficher 4 types de message pour vous aider à structurer votre contenu.\nNote {{% notice note %}} Une notice de type *note* {{% /notice %}}  s\u0026rsquo;affiche comme\nUne notice de type note\n Info {{% notice info %}} Une notice de type *info* {{% /notice %}}  s\u0026rsquo;affiche comme\nUne notice de type info\n Tip {{% notice tip %}} Une notice de type *tip* {{% /notice %}}  s\u0026rsquo;affiche comme\nUne notice de type tip\n Warning {{% notice warning %}} Une notice de type *warning* {{% /notice %}}  s\u0026rsquo;affiche comme\nUne notice de type warning\n "
},
{
	"uri": "http://example.org/shortcodes/siteparam/",
	"title": "Site param",
	"tags": [],
	"description": "Get value of site params variables in your page.",
	"content": "siteparam shortcode is used to help you print values of site params.\nFor instance, in this current site, the editURL variable is used in config.toml\n[params] editURL = \u0026quot;https://github.com/matcornic/hugo-theme-learn/edit/master/exampleSite/content/\u0026quot;  Use the siteparam shortcode to display its value.\n`editURL` Value : {{% siteparam \u0026quot;editURL\u0026quot; %}}  is displayed as\neditURL Value :\n"
},
{
	"uri": "http://example.org/shortcodes/siteparam.fr/",
	"title": "Site param",
	"tags": [],
	"description": "Afficher la valeur d&#39;un paramètre global du site dans votre page",
	"content": "Les shortcode siteparam est utilisé pour vous aider à afficher des valeurs provenant des paramètres globaux du site.\nPar exemple, dans ce site, le paramètre editURL est utilisé dans le fichier config.toml\n[params] editURL = \u0026quot;https://github.com/matcornic/hugo-theme-learn/edit/master/exampleSite/content/\u0026quot;  Utilisez le shortcode siteparam pour affichier sa valeur.\nValeur de `editURL` : {{% siteparam \u0026quot;editURL\u0026quot; %}}  s\u0026rsquo;affiche comme\nValeur de editURL :\n"
},
{
	"uri": "http://example.org/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/shortcodes/children/children-1/",
	"title": "page 1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "http://example.org/shortcodes/children/children-1/children-1-1/",
	"title": "page 1-1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "http://example.org/shortcodes/children/children-1/children-1-1/children-1-1-1/",
	"title": "page 1-1-1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "http://example.org/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/",
	"title": "page 1-1-1-1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "http://example.org/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/children-1-1-1-1-1/",
	"title": "page 1-1-1-1-1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "http://example.org/shortcodes/children/children-2/",
	"title": "page 2",
	"tags": [],
	"description": "",
	"content": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"
},
{
	"uri": "http://example.org/shortcodes/children/children-3/",
	"title": "page 3",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page, not displayed in the menu\n"
},
{
	"uri": "http://example.org/shortcodes/children/children-4/",
	"title": "page 4",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page, not displayed in the menu\n"
},
{
	"uri": "http://example.org/shortcodes/children/test/",
	"title": "page test",
	"tags": [],
	"description": "This is a page test",
	"content": "This is a test demo child page\n"
},
{
	"uri": "http://example.org/shortcodes/children/test.fr/",
	"title": "page test",
	"tags": [],
	"description": "Ceci est une page test",
	"content": "Ceci est une page de demo\n"
},
{
	"uri": "http://example.org/shortcodes/children/children-2/test3/",
	"title": "page test 3",
	"tags": [],
	"description": "This is a page test",
	"content": "This is a test 3 demo child page\n"
},
{
	"uri": "http://example.org/shortcodes/children/children-2/test3.fr/",
	"title": "page test 3",
	"tags": [],
	"description": "Ceci est une page test",
	"content": "Ceci est une page de demo test 3\n"
}]